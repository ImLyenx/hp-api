generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Card {
  id        Int        @id @default(autoincrement())
  name      String
  slug      String     @unique
  house     String     @db.VarChar(32)
  image     String
  userCards UserCard[]
}

model User {
  id               Int        @id @default(autoincrement())
  email            String     @unique
  name             String
  lastHouseVisited String
  password         String
  lastOpening      DateTime?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  userCards        UserCard[]
  sentTrades       Trade[]    @relation("TradeSender")
  receivedTrades   Trade[]    @relation("TradeReceiver")
}

model UserCard {
  id            Int             @id @default(autoincrement())
  userId        Int
  cardId        Int
  isFavorite    Boolean         @default(false)
  card          Card            @relation(fields: [cardId], references: [id])
  user          User            @relation(fields: [userId], references: [id])
  TradeUserCard TradeUserCard[]

  @@unique([userId, cardId])
  @@index([cardId], map: "UserCard_cardId_fkey")
}

model Trade {
  id             Int             @id @default(autoincrement())
  senderId       Int
  receiverId     Int
  status         String
  expirationDate DateTime
  sender         User            @relation("TradeSender", fields: [senderId], references: [id])
  receiver       User            @relation("TradeReceiver", fields: [receiverId], references: [id])
  cards          TradeUserCard[]

  @@index([senderId], name: "senderId")
  @@index([receiverId], name: "receiverId")
}

model TradeUserCard {
  tradeId    Int
  userCardId Int
  isSender   Boolean
  trade      Trade    @relation(fields: [tradeId], references: [id])
  userCard   UserCard @relation(fields: [userCardId], references: [id])

  @@id([tradeId, userCardId])
}
